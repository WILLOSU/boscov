generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

//
// ✅ Modelo Usuario
//
model Usuario {
  id                Int           @id @default(autoincrement())
  nome              String
  senha             String
  email             String        @unique
  status            Boolean       @default(true)
  apelido           String?
  dataNascimento    DateTime
  dataCriacao       DateTime      @default(now())
  dataAtualizacao   DateTime      @updatedAt

  tipoUsuarioId     Int
  tipoUsuario       TipoUsuario   @relation(fields: [tipoUsuarioId], references: [id])

  avaliacoes        Avaliacao[]
}

//
// ✅ Modelo TipoUsuario
//
model TipoUsuario {
  id        Int       @id @default(autoincrement())
  nome      String

  usuarios  Usuario[]
}

//
// ✅ Modelo Filme
//
model Filme {
  id               Int              @id @default(autoincrement())
  nome             String
  diretor          String
  anoLancamento    Int
  generoId         Int
  duracao          Int
  produtora        String
  classificacao    String
  poster           String?
  sinopse          String?
  status           Boolean          @default(true)
  dataAtualizacao  DateTime?


  genero   Genero @relation(fields: [generoId], references: [id])
  generos          Genero_Filme[]   // Relação N:N com Genero (intermediário)
  avaliacoes       Avaliacao[]      // Relação 1:N com Avaliação
}

//
// ✅ Modelo Genero
//
model Genero {
  id        Int             @id @default(autoincrement())
  descricao String
  status Boolean @default(true)


  filmes    Filme[]         // Relação 1:N com Filme (usada por generoId)
  generos   Genero_Filme[]  // Relação N:N com Filme
}

//
// ✅ Tabela intermediária para Filme e Genero (N:N)
//
model Genero_Filme {
  idGenero   Int
  idFilme    Int

  genero     Genero @relation(fields: [idGenero], references: [id])
  filme      Filme  @relation(fields: [idFilme], references: [id])

  @@id([idGenero, idFilme])
}

//
// ✅ Avaliação (N:1 com Usuario e Filme)
//
model Avaliacao {
  id         Int      @id @default(autoincrement())
  idUsuario  Int
  idFilme    Int
  nota       Int
  comentario String?

  usuario    Usuario  @relation(fields: [idUsuario], references: [id])
  filme      Filme    @relation(fields: [idFilme], references: [id])
}
